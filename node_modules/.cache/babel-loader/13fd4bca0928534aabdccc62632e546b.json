{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Contentful Delivery API SDK. Allows you to create instances of a client\n * with access to the Contentful Content Delivery API.\n * @namespace contentful\n * @see ContentfulClientAPI\n */\n\n\nimport axios from 'axios';\nimport { createHttpClient, getUserAgentHeader } from 'contentful-sdk-core';\nimport createContentfulApi from './create-contentful-api';\nimport createGlobalOptions from './create-global-options';\n/**\n * Create a client instance\n * @func\n * @name createClient\n * @memberof contentful\n * @param {Object} params - Client initialization parameters\n * @prop {string} params.space - Space ID\n * @prop {string} params.accessToken - Contentful CDA Access Token\n * @prop {string} [params.environment=\"master\"] - Contentful Environment ID\n * @prop {boolean=} params.insecure - Requests will be made over http instead of the default https (default: true)\n * @prop {string=} params.host - API host (default: cdn.contentful.com). Also usable with preview.contentful.com.\n * @prop {string=} params.basePath - Path appended to the host to support gateways/proxies with custom urls.\n * @prop {Object=} params.httpAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=} params.httpsAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=} params.proxy - Optional Axios proxy (see <a href=\"https://github.com/mzabriskie/axios#request-config\"> axios docs </a>)\n * @prop {Object=} params.headers - Optional additional headers\n * @prop {function=} params.adapter - Optional axios request adapter (see <a href=\"https://github.com/mzabriskie/axios#request-config\"> axios docs </a>)\n * @prop {boolean=?} params.resolveLinks - If we should resolve links between entries (default: true)\n * @prop {boolean=?} params.removeUnresolved - If we should remove links to entries which could not be resolved (default: false)\n * @prop {boolean=?} params.retryOnError - If we should retry on errors and 429 rate limit exceptions (default: true)\n * @prop {function=} params.logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (The default can be found at: https://github.com/contentful/contentful-sdk-core/blob/master/lib/create-http-client.js)\n * @prop {string=?} params.application - Application name and version e.g myApp/version\n * @prop {string=?} params.integration - Integration name and version e.g react/version\n * @prop {number=} params.timeout in milliseconds - connection timeout (default:30000)\n * @prop {number=} params.retryLimit - Optional number of retries before failure. Default is 5\n * @returns {ContentfulClientAPI.ClientAPI}\n * @example\n * const contentful = require('contentful')\n * const client = contentful.createClient({\n *  accessToken: 'myAccessToken',\n *  space: 'mySpaceId'\n * })\n */\n\nexport function createClient(params) {\n  if (!params.accessToken) {\n    throw new TypeError('Expected parameter accessToken');\n  }\n\n  if (!params.space) {\n    throw new TypeError('Expected parameter space');\n  }\n\n  var defaultConfig = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    defaultHostname: 'cdn.contentful.com',\n    environment: 'master'\n  };\n\n  var config = _objectSpread(_objectSpread({}, defaultConfig), params);\n\n  var userAgentHeader = getUserAgentHeader(\"contentful.js/\".concat(\"8.1.7\"), config.application, config.integration);\n  config.headers = _objectSpread(_objectSpread({}, config.headers), {}, {\n    'Content-Type': 'application/vnd.contentful.delivery.v1+json',\n    'X-Contentful-User-Agent': userAgentHeader\n  });\n  var http = createHttpClient(axios, config);\n  var getGlobalOptions = createGlobalOptions({\n    resolveLinks: config.resolveLinks,\n    environment: config.environment,\n    removeUnresolved: config.removeUnresolved,\n    spaceBaseUrl: http.defaults.baseURL,\n    environmentBaseUrl: \"\".concat(http.defaults.baseURL, \"environments/\").concat(config.environment)\n  }); // Append environment to baseURL\n\n  http.defaults.baseURL = getGlobalOptions().environmentBaseUrl; // Intercepts response and obscure the token\n\n  obscureAuthTokenInResponse(http);\n  return createContentfulApi({\n    http: http,\n    getGlobalOptions: getGlobalOptions\n  });\n}\n\nfunction obscureAuthTokenInResponse(http) {\n  http.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if (error.response && error.response.config.headers.Authorization) {\n      var token = error.response.config.headers.Authorization;\n      error.response.config.headers.Authorization = error.response.config.headers.Authorization.replace(token, \"Bearer...\".concat(token.substr(-5)));\n\n      if (error.response.request._headers && error.response.request._headers.authorization) {\n        error.response.request._headers.authorization = error.response.request._headers.authorization.replace(token, \"Bearer...\".concat(token.substr(-5)));\n      }\n\n      if (error.response.request._header) {\n        error.response.request._header = error.response.request._header.replace(token, \"Bearer...\".concat(token.substr(-5)));\n      }\n    }\n\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"sources":["/Users/user/Desktop/tech-store/node_modules/contentful/dist/es-modules/contentful.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","axios","createHttpClient","getUserAgentHeader","createContentfulApi","createGlobalOptions","createClient","params","accessToken","TypeError","space","defaultConfig","resolveLinks","removeUnresolved","defaultHostname","environment","config","userAgentHeader","concat","application","integration","headers","http","getGlobalOptions","spaceBaseUrl","defaults","baseURL","environmentBaseUrl","obscureAuthTokenInResponse","interceptors","response","use","error","Authorization","token","replace","substr","request","_headers","authorization","_header","Promise","reject"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;AAEjN;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAOI,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,qBAArD;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AACA,OAAOC,mBAAP,MAAgC,yBAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACnC,MAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AACvB,UAAM,IAAIC,SAAJ,CAAc,gCAAd,CAAN;AACD;;AAED,MAAI,CAACF,MAAM,CAACG,KAAZ,EAAmB;AACjB,UAAM,IAAID,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,MAAIE,aAAa,GAAG;AAClBC,IAAAA,YAAY,EAAE,IADI;AAElBC,IAAAA,gBAAgB,EAAE,KAFA;AAGlBC,IAAAA,eAAe,EAAE,oBAHC;AAIlBC,IAAAA,WAAW,EAAE;AAJK,GAApB;;AAOA,MAAIC,MAAM,GAAG/B,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK0B,aAAL,CAAd,EAAmCJ,MAAnC,CAA1B;;AAEA,MAAIU,eAAe,GAAGd,kBAAkB,CAAC,iBAAiBe,MAAjB,CAAwB,OAAxB,CAAD,EAAmCF,MAAM,CAACG,WAA1C,EAAuDH,MAAM,CAACI,WAA9D,CAAxC;AACAJ,EAAAA,MAAM,CAACK,OAAP,GAAiBpC,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK+B,MAAM,CAACK,OAAZ,CAAd,EAAoC,EAApC,EAAwC;AACpE,oBAAgB,6CADoD;AAEpE,+BAA2BJ;AAFyC,GAAxC,CAA9B;AAIA,MAAIK,IAAI,GAAGpB,gBAAgB,CAACD,KAAD,EAAQe,MAAR,CAA3B;AACA,MAAIO,gBAAgB,GAAGlB,mBAAmB,CAAC;AACzCO,IAAAA,YAAY,EAAEI,MAAM,CAACJ,YADoB;AAEzCG,IAAAA,WAAW,EAAEC,MAAM,CAACD,WAFqB;AAGzCF,IAAAA,gBAAgB,EAAEG,MAAM,CAACH,gBAHgB;AAIzCW,IAAAA,YAAY,EAAEF,IAAI,CAACG,QAAL,CAAcC,OAJa;AAKzCC,IAAAA,kBAAkB,EAAE,GAAGT,MAAH,CAAUI,IAAI,CAACG,QAAL,CAAcC,OAAxB,EAAiC,eAAjC,EAAkDR,MAAlD,CAAyDF,MAAM,CAACD,WAAhE;AALqB,GAAD,CAA1C,CAxBmC,CA8B/B;;AAEJO,EAAAA,IAAI,CAACG,QAAL,CAAcC,OAAd,GAAwBH,gBAAgB,GAAGI,kBAA3C,CAhCmC,CAgC4B;;AAE/DC,EAAAA,0BAA0B,CAACN,IAAD,CAA1B;AACA,SAAOlB,mBAAmB,CAAC;AACzBkB,IAAAA,IAAI,EAAEA,IADmB;AAEzBC,IAAAA,gBAAgB,EAAEA;AAFO,GAAD,CAA1B;AAID;;AAED,SAASK,0BAAT,CAAoCN,IAApC,EAA0C;AACxCA,EAAAA,IAAI,CAACO,YAAL,CAAkBC,QAAlB,CAA2BC,GAA3B,CAA+B,UAAUD,QAAV,EAAoB;AACjD,WAAOA,QAAP;AACD,GAFD,EAEG,UAAUE,KAAV,EAAiB;AAClB,QAAIA,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAed,MAAf,CAAsBK,OAAtB,CAA8BY,aAApD,EAAmE;AACjE,UAAIC,KAAK,GAAGF,KAAK,CAACF,QAAN,CAAed,MAAf,CAAsBK,OAAtB,CAA8BY,aAA1C;AACAD,MAAAA,KAAK,CAACF,QAAN,CAAed,MAAf,CAAsBK,OAAtB,CAA8BY,aAA9B,GAA8CD,KAAK,CAACF,QAAN,CAAed,MAAf,CAAsBK,OAAtB,CAA8BY,aAA9B,CAA4CE,OAA5C,CAAoDD,KAApD,EAA2D,YAAYhB,MAAZ,CAAmBgB,KAAK,CAACE,MAAN,CAAa,CAAC,CAAd,CAAnB,CAA3D,CAA9C;;AAEA,UAAIJ,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBC,QAAvB,IAAmCN,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBC,QAAvB,CAAgCC,aAAvE,EAAsF;AACpFP,QAAAA,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBC,QAAvB,CAAgCC,aAAhC,GAAgDP,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBC,QAAvB,CAAgCC,aAAhC,CAA8CJ,OAA9C,CAAsDD,KAAtD,EAA6D,YAAYhB,MAAZ,CAAmBgB,KAAK,CAACE,MAAN,CAAa,CAAC,CAAd,CAAnB,CAA7D,CAAhD;AACD;;AAED,UAAIJ,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBG,OAA3B,EAAoC;AAClCR,QAAAA,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBG,OAAvB,GAAiCR,KAAK,CAACF,QAAN,CAAeO,OAAf,CAAuBG,OAAvB,CAA+BL,OAA/B,CAAuCD,KAAvC,EAA8C,YAAYhB,MAAZ,CAAmBgB,KAAK,CAACE,MAAN,CAAa,CAAC,CAAd,CAAnB,CAA9C,CAAjC;AACD;AACF;;AAED,WAAOK,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;AACD,GAjBD;AAkBD","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Contentful Delivery API SDK. Allows you to create instances of a client\n * with access to the Contentful Content Delivery API.\n * @namespace contentful\n * @see ContentfulClientAPI\n */\nimport axios from 'axios';\nimport { createHttpClient, getUserAgentHeader } from 'contentful-sdk-core';\nimport createContentfulApi from './create-contentful-api';\nimport createGlobalOptions from './create-global-options';\n/**\n * Create a client instance\n * @func\n * @name createClient\n * @memberof contentful\n * @param {Object} params - Client initialization parameters\n * @prop {string} params.space - Space ID\n * @prop {string} params.accessToken - Contentful CDA Access Token\n * @prop {string} [params.environment=\"master\"] - Contentful Environment ID\n * @prop {boolean=} params.insecure - Requests will be made over http instead of the default https (default: true)\n * @prop {string=} params.host - API host (default: cdn.contentful.com). Also usable with preview.contentful.com.\n * @prop {string=} params.basePath - Path appended to the host to support gateways/proxies with custom urls.\n * @prop {Object=} params.httpAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=} params.httpsAgent - Optional Node.js HTTP agent for proxying (see <a href=\"https://nodejs.org/api/http.html#http_class_http_agent\">Node.js docs</a> and <a href=\"https://www.npmjs.com/package/https-proxy-agent\">https-proxy-agent</a>)\n * @prop {Object=} params.proxy - Optional Axios proxy (see <a href=\"https://github.com/mzabriskie/axios#request-config\"> axios docs </a>)\n * @prop {Object=} params.headers - Optional additional headers\n * @prop {function=} params.adapter - Optional axios request adapter (see <a href=\"https://github.com/mzabriskie/axios#request-config\"> axios docs </a>)\n * @prop {boolean=?} params.resolveLinks - If we should resolve links between entries (default: true)\n * @prop {boolean=?} params.removeUnresolved - If we should remove links to entries which could not be resolved (default: false)\n * @prop {boolean=?} params.retryOnError - If we should retry on errors and 429 rate limit exceptions (default: true)\n * @prop {function=} params.logHandler - A log handler function to process given log messages & errors. Receives the log level (error, warning & info) and the actual log data (Error object or string). (The default can be found at: https://github.com/contentful/contentful-sdk-core/blob/master/lib/create-http-client.js)\n * @prop {string=?} params.application - Application name and version e.g myApp/version\n * @prop {string=?} params.integration - Integration name and version e.g react/version\n * @prop {number=} params.timeout in milliseconds - connection timeout (default:30000)\n * @prop {number=} params.retryLimit - Optional number of retries before failure. Default is 5\n * @returns {ContentfulClientAPI.ClientAPI}\n * @example\n * const contentful = require('contentful')\n * const client = contentful.createClient({\n *  accessToken: 'myAccessToken',\n *  space: 'mySpaceId'\n * })\n */\n\nexport function createClient(params) {\n  if (!params.accessToken) {\n    throw new TypeError('Expected parameter accessToken');\n  }\n\n  if (!params.space) {\n    throw new TypeError('Expected parameter space');\n  }\n\n  var defaultConfig = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    defaultHostname: 'cdn.contentful.com',\n    environment: 'master'\n  };\n\n  var config = _objectSpread(_objectSpread({}, defaultConfig), params);\n\n  var userAgentHeader = getUserAgentHeader(\"contentful.js/\".concat(\"8.1.7\"), config.application, config.integration);\n  config.headers = _objectSpread(_objectSpread({}, config.headers), {}, {\n    'Content-Type': 'application/vnd.contentful.delivery.v1+json',\n    'X-Contentful-User-Agent': userAgentHeader\n  });\n  var http = createHttpClient(axios, config);\n  var getGlobalOptions = createGlobalOptions({\n    resolveLinks: config.resolveLinks,\n    environment: config.environment,\n    removeUnresolved: config.removeUnresolved,\n    spaceBaseUrl: http.defaults.baseURL,\n    environmentBaseUrl: \"\".concat(http.defaults.baseURL, \"environments/\").concat(config.environment)\n  }); // Append environment to baseURL\n\n  http.defaults.baseURL = getGlobalOptions().environmentBaseUrl; // Intercepts response and obscure the token\n\n  obscureAuthTokenInResponse(http);\n  return createContentfulApi({\n    http: http,\n    getGlobalOptions: getGlobalOptions\n  });\n}\n\nfunction obscureAuthTokenInResponse(http) {\n  http.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if (error.response && error.response.config.headers.Authorization) {\n      var token = error.response.config.headers.Authorization;\n      error.response.config.headers.Authorization = error.response.config.headers.Authorization.replace(token, \"Bearer...\".concat(token.substr(-5)));\n\n      if (error.response.request._headers && error.response.request._headers.authorization) {\n        error.response.request._headers.authorization = error.response.request._headers.authorization.replace(token, \"Bearer...\".concat(token.substr(-5)));\n      }\n\n      if (error.response.request._header) {\n        error.response.request._header = error.response.request._header.replace(token, \"Bearer...\".concat(token.substr(-5)));\n      }\n    }\n\n    return Promise.reject(error);\n  });\n}"]},"metadata":{},"sourceType":"module"}